version: '3.8'

services:
  redis:
    image: redis:7.2-alpine
    container_name: legacy_pi_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - legacy_pi_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:7.0
    container_name: md_docs_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: md_docs
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - legacy_pi_network

  django-app:
    build: .
    container_name: legacy_pi_django
    restart: unless-stopped
    expose:
      - "8000"
    environment:
      - DEBUG=False
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=redis123
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password123
      - MONGODB_DATABASE=md_docs
      - ARK_API_KEY=${ARK_API_KEY:-your_api_key_here}
    volumes:
      - ./media:/app/media
      - ./static:/app/static
      - ./uwsgi.ini:/app/uwsgi.ini
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - legacy_pi_network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/ai-chat/health/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    container_name: legacy_pi_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      django-app:
        condition: service_started
    networks:
      - legacy_pi_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://django-app:8000/api/ai-chat/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-express:
    image: mongo-express:1.0.0
    container_name: md_docs_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - legacy_pi_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  legacy_pi_network:
    driver: bridge
