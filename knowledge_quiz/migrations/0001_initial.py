# Generated by Django 5.2.5 on 2025-09-07 02:34

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='题目内容')),
                ('difficulty', models.CharField(choices=[('easy', '简单'), ('medium', '中等'), ('hard', '困难')], default='medium', max_length=10, verbose_name='难度')),
                ('category', models.CharField(choices=[('party_history', '党史'), ('theory', '理论')], default='party_history', max_length=20, verbose_name='分类')),
                ('explanation', models.TextField(blank=True, verbose_name='答案解析')),
                ('tags', models.CharField(blank=True, help_text='用逗号分隔多个标签', max_length=500, verbose_name='标签')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('question_type', models.CharField(choices=[('single', '单选题'), ('multiple', '多选题')], max_length=20, verbose_name='题目类型')),
                ('options', models.JSONField(default=list, help_text='选择题的选项列表，格式：[{"text": "选项内容", "is_correct": true}]', verbose_name='选项')),
            ],
            options={
                'verbose_name': '选择题',
                'verbose_name_plural': '选择题',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FillQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='题目内容')),
                ('difficulty', models.CharField(choices=[('easy', '简单'), ('medium', '中等'), ('hard', '困难')], default='medium', max_length=10, verbose_name='难度')),
                ('category', models.CharField(choices=[('party_history', '党史'), ('theory', '理论')], default='party_history', max_length=20, verbose_name='分类')),
                ('explanation', models.TextField(blank=True, verbose_name='答案解析')),
                ('tags', models.CharField(blank=True, help_text='用逗号分隔多个标签', max_length=500, verbose_name='标签')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('correct_answer', models.TextField(help_text='填空题的正确答案，多个答案用分号分隔', verbose_name='正确答案')),
            ],
            options={
                'verbose_name': '填空题',
                'verbose_name_plural': '填空题',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('category', models.CharField(choices=[('marxism_leninism', '马克思列宁主义'), ('mao_zedong_thought', '毛泽东思想'), ('deng_xiaoping_theory', '邓小平理论'), ('three_represents', '"三个代表"重要思想'), ('scientific_development', '科学发展观'), ('xi_jinping_thought', '习近平新时代中国特色社会主义思想')], default='marxism_leninism', max_length=30, verbose_name='分类')),
                ('source', models.CharField(default='共产党员网', help_text='知识条目的来源网站或机构', max_length=100, verbose_name='数据来源')),
                ('tags', models.CharField(blank=True, help_text='用逗号分隔多个标签', max_length=500, verbose_name='标签')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '知识条目',
                'verbose_name_plural': '知识条目',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='题目内容')),
                ('question_type', models.CharField(choices=[('choice_single', '单选题'), ('choice_multiple', '多选题'), ('fill', '填空题')], max_length=20, verbose_name='题目类型')),
                ('difficulty', models.CharField(choices=[('easy', '简单'), ('medium', '中等'), ('hard', '困难')], default='medium', max_length=10, verbose_name='难度')),
                ('category', models.CharField(choices=[('party_history', '党史'), ('theory', '理论')], default='party_history', max_length=20, verbose_name='分类')),
                ('explanation', models.TextField(blank=True, verbose_name='答案解析')),
                ('tags', models.CharField(blank=True, help_text='用逗号分隔多个标签', max_length=500, verbose_name='标签')),
                ('options', models.JSONField(blank=True, default=list, help_text='选择题的选项列表，格式：[{"text": "选项内容", "is_correct": true}]', null=True, verbose_name='选项')),
                ('correct_answer', models.TextField(blank=True, help_text='填空题的正确答案，多个答案用分号分隔', null=True, verbose_name='正确答案')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='会话ID')),
                ('total_questions', models.IntegerField(default=0, verbose_name='总题数')),
                ('correct_answers', models.IntegerField(default=0, verbose_name='正确题数')),
                ('score', models.FloatField(default=0.0, verbose_name='得分')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
            ],
            options={
                'verbose_name': '答题会话',
                'verbose_name_plural': '答题会话',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.TextField(verbose_name='用户答案')),
                ('is_correct', models.BooleanField(verbose_name='是否正确')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='答题时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='knowledge_quiz.question', verbose_name='题目')),
            ],
            options={
                'verbose_name': '答题记录',
                'verbose_name_plural': '答题记录',
                'ordering': ['-answered_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_ip', models.GenericIPAddressField(verbose_name='客户端IP')),
                ('question_data', models.JSONField(help_text='包含题目、选项和正确答案的完整数据', verbose_name='题目数据')),
                ('date', models.DateField(auto_now_add=True, verbose_name='日期')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_quiz.question', verbose_name='题目')),
            ],
            options={
                'verbose_name': '每日一题记录',
                'verbose_name_plural': '每日一题记录',
                'ordering': ['-created_at'],
                'unique_together': {('client_ip', 'date')},
            },
        ),
    ]
